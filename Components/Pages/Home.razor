@page "/"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject PizzaSalesState SalesState
@rendermode InteractiveServer

<div class="container">
<header class="mb-4 border-bottom pb-3">
    <h1 class="">Welcome to Blazing Pizzas</h1>
    <div class="d-flex justify-content-between align-items-center">
        <p>Today, we've sold this many pizzas: @SalesState.PizzasSoldToday</p>
        <button class="btn btn-primary" @onclick="IncrementSales">Buy a Pizza</button>
    </div>
</header>
    <ul class="pizza-cards">
        @if (specials != null)
        {
            @foreach (var special in specials)
            {
                <li style="background-image: url('@special.ImageUrl')">
                    <div class="pizza-info">
                        <span class="title">@special.Name</span>
                            @special.Description
                            <span class="price">@special.GetFormattedBasePrice()</span>
                    </div>
                </li>
            }
        }
    </ul>
</div>

@code {
    List<PizzaSpecial> specials = new();

    protected override async Task OnInitializedAsync()
    {
        specials = await HttpClient.GetFromJsonAsync<List<PizzaSpecial>>(NavigationManager.BaseUri + "specials");
    }

    private void IncrementSales()
    {
        SalesState.PizzasSoldToday++;
        StateHasChanged(); // Force re-render
    }

}